<?php

namespace Meupf\PlateformBundle\Repository;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * TemoignageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TemoignageRepository extends EntityRepository
{
    public function myFindAll(){
        // MÃ©thode 1 : en passant par l'EntityManager
        $queryBuilder = $this->createNativeNamedQuery('s');
        $query = $queryBuilder->getQuery();
        $results = $query->getResult();
        return $results;
    }

    public function lastSermon($limit){
        $queryBuilder = $this->createQueryBuilder('s')
            ->select('s')
            //->from('MeupfPlateformBundle:Sermon', 'u')
            ->where('s.online = :online')
            ->orderBy('s.createdAt', 'DESC')
            ->setParameter('online', true)
            ->setMaxResults($limit);
        $query = $queryBuilder->getQuery();
        $resultat = $query->getResult();
        return $resultat;
    }

    public function lastSermonVideo($limit){
        $queryBuilder = $this->createQueryBuilder('s')
            ->select('u')
            ->from('MeupfPlateformBundle:Sermon', 'u')
            ->where('u.online = :online')
            ->orderBy('u.createdAt', 'DESC')
            ->setParameter('online', true)
            ->setMaxResults($limit);
        $query = $queryBuilder->getQuery();
        $resultats = $query->getResult();
        return $resultats;
    }

    public function getSermonCategorie($page, $nbPerPage, $id){
        $query = $this->createQueryBuilder('s')
            ->leftJoin('s.categorie', 'c') //categorie_id pour sermon
            ->addSelect('c')
            ->where('c.id = :id')
            ->andWhere('s.online = :online')
            ->orderBy('s.createdAt', 'DESC')
            ->setParameter('id', $id)
            ->setParameter('online', true)
            ->getQuery();
        $query ->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage);
        return new Paginator($query, true);
    }

    public function getTemoignages(){
        $query = $this->createQueryBuilder('s')
            //->leftJoin('s.categorie', 'c') //categorie_id pour sermon
            //->addSelect('c')
            ->orderBy('s.createdAt', 'DESC')
            // ->setParameter('id', )
            ->getQuery();
        $result = $query ->getResult();
        return $result;
    }

}
